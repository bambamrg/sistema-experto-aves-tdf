{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivan_\\\\OneDrive\\\\Documentos\\\\Poli\\\\2 a\\xF1o 2 cuatrimestre\\\\Desarrollo de Sistemas IA\\\\Prueba-FastAPI\\\\Frontend\\\\frontend\\\\src\\\\ExpertSystem.js\",\n  _s = $RefreshSig$();\n// frontend/src/ExpertSystem.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ExpertSystem.css'; // Creamos este CSS después\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL de tu API de FastAPI\n\nfunction ExpertSystem() {\n  _s();\n  const [currentNode, setCurrentNode] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  //const [selectedOption, setSelectedOption] = useState(''); // Para manejar la opción seleccionada si es un <select>\n\n  useEffect(() => {\n    // Al cargar el componente, inicia la consulta\n    startConsultation();\n  }, []); // El array vacío asegura que se ejecuta solo una vez al montar\n\n  const startConsultation = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/start`);\n      setCurrentNode(response.data);\n    } catch (err) {\n      console.error(\"Error al iniciar la consulta:\", err);\n      setError(\"No se pudo conectar con el sistema experto. Inténtalo de nuevo más tarde.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOptionSelect = async optionValue => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/consult`, {\n        current_node_id: currentNode.node_id,\n        selected_option_value: optionValue\n      });\n      setCurrentNode(response.data); // Actualiza el nodo actual con la respuesta de la API\n      setSelectedOption(''); // Resetea la opción seleccionada si se usó un <select>\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error al consultar:\", err.response ? err.response.data : err.message);\n      setError(`Error al procesar la respuesta: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Error desconocido'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentNode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container\",\n      children: \"No se pudo cargar el sistema experto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si es un resultado final\n  if (currentNode.node_id === \"result\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container result-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentNode.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bird-name\",\n        children: currentNode.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startConsultation,\n        className: \"reset-button\",\n        children: \"Iniciar Nueva Consulta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si es una pregunta\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expert-system-container question-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentNode.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: currentNode.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"option-button\",\n        onClick: () => handleOptionSelect(option.value),\n        children: option.value\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpertSystem, \"eWrGWr8SujH45qjLUQzZoEKDoSg=\");\n_c = ExpertSystem;\nexport default ExpertSystem;\nvar _c;\n$RefreshReg$(_c, \"ExpertSystem\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","ExpertSystem","_s","currentNode","setCurrentNode","loading","setLoading","error","setError","startConsultation","response","get","data","err","console","handleOptionSelect","optionValue","post","current_node_id","node_id","selected_option_value","setSelectedOption","_err$response","_err$response$data","message","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","result","onClick","question","options","map","option","value","_c","$RefreshReg$"],"sources":["C:/Users/ivan_/OneDrive/Documentos/Poli/2 año 2 cuatrimestre/Desarrollo de Sistemas IA/Prueba-FastAPI/Frontend/frontend/src/ExpertSystem.js"],"sourcesContent":["// frontend/src/ExpertSystem.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ExpertSystem.css'; // Creamos este CSS después\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL de tu API de FastAPI\r\n\r\nfunction ExpertSystem() {\r\n  const [currentNode, setCurrentNode] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  //const [selectedOption, setSelectedOption] = useState(''); // Para manejar la opción seleccionada si es un <select>\r\n\r\n  useEffect(() => {\r\n    // Al cargar el componente, inicia la consulta\r\n    startConsultation();\r\n  }, []); // El array vacío asegura que se ejecuta solo una vez al montar\r\n\r\n  const startConsultation = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/start`);\r\n      setCurrentNode(response.data);\r\n    } catch (err) {\r\n      console.error(\"Error al iniciar la consulta:\", err);\r\n      setError(\"No se pudo conectar con el sistema experto. Inténtalo de nuevo más tarde.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOptionSelect = async (optionValue) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/consult`, {\r\n        current_node_id: currentNode.node_id,\r\n        selected_option_value: optionValue\r\n      });\r\n      setCurrentNode(response.data); // Actualiza el nodo actual con la respuesta de la API\r\n      setSelectedOption(''); // Resetea la opción seleccionada si se usó un <select>\r\n    } catch (err) {\r\n      console.error(\"Error al consultar:\", err.response ? err.response.data : err.message);\r\n      setError(`Error al procesar la respuesta: ${err.response?.data?.detail || 'Error desconocido'}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"expert-system-container\">Cargando...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"expert-system-container error-message\">{error}</div>;\r\n  }\r\n\r\n  if (!currentNode) {\r\n    return <div className=\"expert-system-container\">No se pudo cargar el sistema experto.</div>;\r\n  }\r\n\r\n  // Si es un resultado final\r\n  if (currentNode.node_id === \"result\") {\r\n    return (\r\n      <div className=\"expert-system-container result-card\">\r\n        <h2>{currentNode.message}</h2>\r\n        <p className=\"bird-name\">{currentNode.result}</p>\r\n        <button onClick={startConsultation} className=\"reset-button\">\r\n          Iniciar Nueva Consulta\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Si es una pregunta\r\n  return (\r\n    <div className=\"expert-system-container question-card\">\r\n      <h2>{currentNode.question}</h2>\r\n      <div className=\"options-container\">\r\n        {currentNode.options.map((option) => (\r\n          <button\r\n            key={option.value}\r\n            className=\"option-button\"\r\n            onClick={() => handleOptionSelect(option.value)}\r\n          >\r\n            {option.value}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {/* Si prefieres un select en lugar de botones, podrías usar esto (descomentar y ajustar) */}\r\n      {/* <select\r\n        className=\"option-select\"\r\n        value={selectedOption}\r\n        onChange={(e) => setSelectedOption(e.target.value)}\r\n      >\r\n        <option value=\"\">Selecciona una opción</option>\r\n        {currentNode.options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.value}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className=\"submit-button\"\r\n        onClick={() => handleOptionSelect(selectedOption)}\r\n        disabled={!selectedOption}\r\n      >\r\n        Siguiente\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpertSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}