{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivan_\\\\OneDrive\\\\Documentos\\\\Poli\\\\2 a\\xF1o 2 cuatrimestre\\\\Desarrollo de Sistemas IA\\\\Prueba-FastAPI\\\\Frontend\\\\frontend\\\\src\\\\ExpertSystem.js\",\n  _s = $RefreshSig$();\n// frontend/src/ExpertSystem.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ExpertSystem.css'; // Creamos este CSS después\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL de tu API de FastAPI\n\nfunction ExpertSystem() {\n  _s();\n  const [currentNode, setCurrentNode] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  //const [selectedOption, setSelectedOption] = useState(''); // Para manejar la opción seleccionada si es un <select>\n  const [answeredQuestionsCount, setAnsweredQuestionsCount] = useState(0);\n  // Nuevo estado para el historial de preguntas y respuestas\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    // Al cargar el componente, inicia la consulta\n    startConsultation();\n  }, []); // El array vacío asegura que se ejecuta solo una vez al montar\n\n  const startConsultation = async () => {\n    setLoading(true);\n    setError(null);\n    setAnsweredQuestionsCount(0);\n    setHistory([]); // Resetear el historial al inicio de una nueva consulta\n    try {\n      const response = await axios.get(`${API_BASE_URL}/start`);\n      setCurrentNode(response.data);\n    } catch (err) {\n      console.error(\"Error al iniciar la consulta:\", err);\n      setError(\"No se pudo conectar con el sistema experto. Inténtalo de nuevo más tarde.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOptionSelect = async optionValue => {\n    setLoading(true);\n    setError(null);\n\n    // Guardar la pregunta actual y la respuesta seleccionada en el historial\n    // Necesitamos el texto completo de la pregunta del currentNode antes de actualizarlo\n    const currentQuestionText = currentNode.question;\n    setHistory(prevHistory => [...prevHistory, {\n      question: currentQuestionText,\n      answer: optionValue\n    }]);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/consult`, {\n        current_node_id: currentNode.node_id,\n        selected_option_value: optionValue\n      });\n      if (response.data.node_id !== \"result\") {\n        setAnsweredQuestionsCount(prevCount => prevCount + 1);\n      }\n      setCurrentNode(response.data); // Actualiza el nodo actual con la respuesta de la API\n      //setSelectedOption(''); // Resetea la opción seleccionada si se usó un <select>\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error al consultar:\", err.response ? err.response.data : err.message);\n      setError(`Error al procesar la respuesta: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Error desconocido'}`);\n      // Si hay un error, podrías querer remover la última entrada del historial\n      setHistory(prevHistory => prevHistory.slice(0, prevHistory.length - 1));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //const progressPercentage = (answeredQuestionsCount / MAX_QUESTIONS) * 100;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentNode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container\",\n      children: \"No se pudo cargar el sistema experto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si es un resultado final\n  if (currentNode.node_id === \"result\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-system-container result-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentNode.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bird-name\",\n        children: currentNode.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tu camino a la identificaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"summary-list\",\n          children: history.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-question\",\n              children: entry.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-answer\",\n              children: entry.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 77\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startConsultation,\n        className: \"reset-button\",\n        children: \"Iniciar Nueva Consulta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si es una pregunta\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expert-system-container question-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentNode.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: currentNode.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"option-button\",\n        onClick: () => handleOptionSelect(option.value),\n        children: option.value\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpertSystem, \"2SchYFhru8jHEHbMSLt+MKv0j2Y=\");\n_c = ExpertSystem;\nexport default ExpertSystem;\nvar _c;\n$RefreshReg$(_c, \"ExpertSystem\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","ExpertSystem","_s","currentNode","setCurrentNode","loading","setLoading","error","setError","answeredQuestionsCount","setAnsweredQuestionsCount","history","setHistory","startConsultation","response","get","data","err","console","handleOptionSelect","optionValue","currentQuestionText","question","prevHistory","answer","post","current_node_id","node_id","selected_option_value","prevCount","_err$response","_err$response$data","message","detail","slice","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","result","map","entry","index","onClick","options","option","value","_c","$RefreshReg$"],"sources":["C:/Users/ivan_/OneDrive/Documentos/Poli/2 año 2 cuatrimestre/Desarrollo de Sistemas IA/Prueba-FastAPI/Frontend/frontend/src/ExpertSystem.js"],"sourcesContent":["// frontend/src/ExpertSystem.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ExpertSystem.css'; // Creamos este CSS después\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL de tu API de FastAPI\r\n\r\nfunction ExpertSystem() {\r\n  const [currentNode, setCurrentNode] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  //const [selectedOption, setSelectedOption] = useState(''); // Para manejar la opción seleccionada si es un <select>\r\n  const [answeredQuestionsCount, setAnsweredQuestionsCount] = useState(0);\r\n  // Nuevo estado para el historial de preguntas y respuestas\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Al cargar el componente, inicia la consulta\r\n    startConsultation();\r\n  }, []); // El array vacío asegura que se ejecuta solo una vez al montar\r\n\r\n  const startConsultation = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setAnsweredQuestionsCount(0);\r\n    setHistory([]); // Resetear el historial al inicio de una nueva consulta\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/start`);\r\n      setCurrentNode(response.data);\r\n    } catch (err) {\r\n      console.error(\"Error al iniciar la consulta:\", err);\r\n      setError(\"No se pudo conectar con el sistema experto. Inténtalo de nuevo más tarde.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOptionSelect = async (optionValue) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    // Guardar la pregunta actual y la respuesta seleccionada en el historial\r\n    // Necesitamos el texto completo de la pregunta del currentNode antes de actualizarlo\r\n    const currentQuestionText = currentNode.question;\r\n    setHistory(prevHistory => [\r\n      ...prevHistory,\r\n      { question: currentQuestionText, answer: optionValue }\r\n    ]);\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/consult`, {\r\n        current_node_id: currentNode.node_id,\r\n        selected_option_value: optionValue\r\n      });\r\n\r\n      if (response.data.node_id !== \"result\") {\r\n        setAnsweredQuestionsCount(prevCount => prevCount + 1);\r\n      }\r\n\r\n      setCurrentNode(response.data); // Actualiza el nodo actual con la respuesta de la API\r\n      //setSelectedOption(''); // Resetea la opción seleccionada si se usó un <select>\r\n    } catch (err) {\r\n      console.error(\"Error al consultar:\", err.response ? err.response.data : err.message);\r\n      setError(`Error al procesar la respuesta: ${err.response?.data?.detail || 'Error desconocido'}`);\r\n      // Si hay un error, podrías querer remover la última entrada del historial\r\n      setHistory(prevHistory => prevHistory.slice(0, prevHistory.length -1));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //const progressPercentage = (answeredQuestionsCount / MAX_QUESTIONS) * 100;\r\n\r\n  if (loading) {\r\n    return <div className=\"expert-system-container\">Cargando...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"expert-system-container error-message\">{error}</div>;\r\n  }\r\n\r\n  if (!currentNode) {\r\n    return <div className=\"expert-system-container\">No se pudo cargar el sistema experto.</div>;\r\n  }\r\n\r\n  // Si es un resultado final\r\n  if (currentNode.node_id === \"result\") {\r\n    return (\r\n      <div className=\"expert-system-container result-card\">\r\n        <h2>{currentNode.message}</h2>\r\n        <p className=\"bird-name\">{currentNode.result}</p>\r\n\r\n        {/* Resumen de la consulta */}\r\n        <div className=\"summary-container\">\r\n          <h3>Tu camino a la identificación:</h3>\r\n          <ul className=\"summary-list\">\r\n            {history.map((entry, index) => (\r\n              <li key={index} className=\"summary-item\">\r\n                <span className=\"summary-question\">{entry.question}</span>: <span className=\"summary-answer\">{entry.answer}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <button onClick={startConsultation} className=\"reset-button\">\r\n          Iniciar Nueva Consulta\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Si es una pregunta\r\n  return (\r\n    <div className=\"expert-system-container question-card\">\r\n      <h2>{currentNode.question}</h2>\r\n      <div className=\"options-container\">\r\n        {currentNode.options.map((option) => (\r\n          <button\r\n            key={option.value}\r\n            className=\"option-button\"\r\n            onClick={() => handleOptionSelect(option.value)}\r\n          >\r\n            {option.value}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {/* Si prefieres un select en lugar de botones, podrías usar esto (descomentar y ajustar) */}\r\n      {/* <select\r\n        className=\"option-select\"\r\n        value={selectedOption}\r\n        onChange={(e) => setSelectedOption(e.target.value)}\r\n      >\r\n        <option value=\"\">Selecciona una opción</option>\r\n        {currentNode.options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.value}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className=\"submit-button\"\r\n        onClick={() => handleOptionSelect(selectedOption)}\r\n        disabled={!selectedOption}\r\n      >\r\n        Siguiente\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpertSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}